{"ast":null,"code":"import{useEffect,useState}from\"react\";import Map,{Source,Layer,Popup}from\"react-map-gl\";import\"mapbox-gl/dist/mapbox-gl.css\";import{Bar}from\"react-chartjs-2\";import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);const MAPBOX_TOKEN=\"pk.eyJ1IjoibWV0cm9raW0yMTciLCJhIjoiY2x4dzFrazJxMmJkajJycHpnNThpYjZpZiJ9.l0lDGi84xouJXT_uq91FOQ\";export default function HealthIndicatorMap(_ref){let{boundary=[],classification_data=[],data}=_ref;console.log(\"boundary prop:\",boundary);const[viewState,setViewState]=useState({longitude:-95.7133,latitude:37.0902,zoom:6});const[selectedCounty,setSelectedCounty]=useState(null);useEffect(()=>{if(boundary.features.length>0){console.log(\"🗺️ Updating Health Indicator Map with multiple boundaries:\",boundary);// Extract ALL boundary coordinates for centering the map\nconst allCoords=boundary.features.flatMap(b=>{var _b$geometry;return((_b$geometry=b.geometry)===null||_b$geometry===void 0?void 0:_b$geometry.type)===\"Polygon\"?b.geometry.coordinates[0]:b.geometry.coordinates.flat(1)||[];});const lons=allCoords.map(c=>c[0]);const lats=allCoords.map(c=>c[1]);if(lons.length>0&&lats.length>0){const minLon=Math.min(...lons);const maxLon=Math.max(...lons);const minLat=Math.min(...lats);const maxLat=Math.max(...lats);setViewState({longitude:(minLon+maxLon)/2,latitude:(minLat+maxLat)/2,zoom:6,// Adjust zoom for multiple counties\ntransitionDuration:1000});}}},[boundary]);const handleCountyClick=event=>{const map=event.target;const features=map.queryRenderedFeatures(event.point,{layers:['boundary-layer']});if(features&&features.length>0){const feature=features[0];const coords=feature.geometry.coordinates.flat(2);if(coords.length>0){// Pair the coordinates\nconst pairedCoords=[];for(let i=0;i<coords.length;i+=2){pairedCoords.push([coords[i],coords[i+1]]);}const validCoords=pairedCoords.filter(coord=>!isNaN(coord[0])&&!isNaN(coord[1]));if(validCoords.length>0){const centroid=validCoords.reduce((acc,coord)=>[acc[0]+coord[0],acc[1]+coord[1]],[0,0]);centroid[0]/=validCoords.length;centroid[1]/=validCoords.length;if(!isNaN(centroid[0])&&!isNaN(centroid[1])){setSelectedCounty({county_name:feature.properties.county_name||\"Unknown County\",healthIndicator:feature.properties.indicator_value||\"N/A\",category:feature.properties.category||\"N/A\",indicator:feature.properties.indicator||\"N/A\",longitude:centroid[0],latitude:centroid[1]});}else{console.warn(\"Centroid is not a valid LngLat object.\");}}else{console.warn(\"No valid coordinates found for the feature.\");}}else{console.warn(\"No coordinates found for the feature.\");}}else{console.warn(\"No features found at the clicked location.\");}};// Filter out duplicate categories for the legend\nconst uniqueCategories=classification_data.reduce((acc,item)=>{if(!acc.some(category=>category.category===item.category)){acc.push(item);}return acc;},[]);// Prepare data for the chart\nconst categoryCounts=classification_data.reduce((acc,item)=>{acc[item.category]=(acc[item.category]||0)+1;return acc;},{});const chartData={labels:Object.keys(categoryCounts),datasets:[{label:'Count of Counties',data:Object.values(categoryCounts),backgroundColor:'rgba(75, 192, 192, 0.6)',borderColor:'rgba(75, 192, 192, 1)',borderWidth:3}]};const chartOptions={responsive:true,plugins:{legend:{position:'bottom'},title:{display:true,text:`Chart showing count of counties`}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"map-container-inner\",children:[/*#__PURE__*/_jsxs(Map,{...viewState,onMove:evt=>setViewState(evt.viewState),mapStyle:\"mapbox://styles/mapbox/light-v10\",mapboxAccessToken:MAPBOX_TOKEN,onClick:handleCountyClick,children:[boundary&&boundary.features&&boundary.features.length>0&&/*#__PURE__*/_jsx(Source,{id:\"county-boundary\",type:\"geojson\",data:boundary,children:/*#__PURE__*/_jsx(Layer,{id:\"boundary-layer\",type:\"fill\",paint:{\"fill-color\":[\"match\",[\"get\",\"category\"],\"High\",\"#FF0000\",\"Low\",\"#00FF00\",\"Moderate\",\"#0000FF\",/* other */\"#FF4D4D\"],\"fill-opacity\":0.4,\"fill-outline-color\":\"#000000\"},onClick:handleCountyClick})}),selectedCounty&&/*#__PURE__*/_jsx(Popup,{longitude:selectedCounty.longitude,latitude:selectedCounty.latitude,closeButton:true,closeOnClick:false,onClose:()=>setSelectedCounty(null),anchor:\"top\",children:/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:\"14px\",fontFamily:\"Arial, sans-serif\",padding:\"5px\"},children:[/*#__PURE__*/_jsx(\"h3\",{style:{marginBottom:\"5px\",fontSize:\"16px\",fontWeight:\"bold\"},children:selectedCounty.county_name}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsxs(\"strong\",{children:[\" \",selectedCounty.indicator]})}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\" Count:\"}),\" \",selectedCounty.healthIndicator]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Category:\"}),\" \",selectedCounty.category]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Legend\"}),/*#__PURE__*/_jsx(\"ul\",{children:uniqueCategories.map((item,index)=>/*#__PURE__*/_jsx(\"li\",{style:{color:item.color},children:item.category},index))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:/*#__PURE__*/_jsx(Bar,{data:chartData,options:chartOptions})})]});}","map":{"version":3,"names":["useEffect","useState","Map","Source","Layer","Popup","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","MAPBOX_TOKEN","HealthIndicatorMap","_ref","boundary","classification_data","data","console","log","viewState","setViewState","longitude","latitude","zoom","selectedCounty","setSelectedCounty","features","length","allCoords","flatMap","b","_b$geometry","geometry","type","coordinates","flat","lons","map","c","lats","minLon","Math","min","maxLon","max","minLat","maxLat","transitionDuration","handleCountyClick","event","target","queryRenderedFeatures","point","layers","feature","coords","pairedCoords","i","push","validCoords","filter","coord","isNaN","centroid","reduce","acc","county_name","properties","healthIndicator","indicator_value","category","indicator","warn","uniqueCategories","item","some","categoryCounts","chartData","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","chartOptions","responsive","plugins","legend","position","title","display","text","className","children","onMove","evt","mapStyle","mapboxAccessToken","onClick","id","paint","closeButton","closeOnClick","onClose","anchor","style","fontSize","fontFamily","padding","marginBottom","fontWeight","index","color","options"],"sources":["C:/Users/zacfr/Downloads/AAG_DASH/compressed/frontend/src/components/HealthIndicatorMap.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Map, { Source, Layer, Popup } from \"react-map-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst MAPBOX_TOKEN = \"pk.eyJ1IjoibWV0cm9raW0yMTciLCJhIjoiY2x4dzFrazJxMmJkajJycHpnNThpYjZpZiJ9.l0lDGi84xouJXT_uq91FOQ\";\r\n\r\nexport default function HealthIndicatorMap({ boundary = [], classification_data = [], data }) {\r\n  console.log(\"boundary prop:\", boundary);\r\n\r\n\r\n  const [viewState, setViewState] = useState({\r\n    longitude: -95.7133,\r\n    latitude: 37.0902,\r\n    zoom: 6\r\n  });\r\n\r\n  const [selectedCounty, setSelectedCounty] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (boundary.features.length > 0) {\r\n      console.log(\"🗺️ Updating Health Indicator Map with multiple boundaries:\", boundary);\r\n\r\n      // Extract ALL boundary coordinates for centering the map\r\n      const allCoords = boundary.features.flatMap(b =>\r\n        b.geometry?.type === \"Polygon\"\r\n          ? b.geometry.coordinates[0]\r\n          : b.geometry.coordinates.flat(1) || []\r\n      );\r\n\r\n      const lons = allCoords.map(c => c[0]);\r\n      const lats = allCoords.map(c => c[1]);\r\n\r\n      if (lons.length > 0 && lats.length > 0) {\r\n        const minLon = Math.min(...lons);\r\n        const maxLon = Math.max(...lons);\r\n        const minLat = Math.min(...lats);\r\n        const maxLat = Math.max(...lats);\r\n\r\n        setViewState({\r\n          longitude: (minLon + maxLon) / 2,\r\n          latitude: (minLat + maxLat) / 2,\r\n          zoom: 6, // Adjust zoom for multiple counties\r\n          transitionDuration: 1000\r\n        });\r\n      }\r\n    }\r\n  }, [boundary]);\r\n\r\n  const handleCountyClick = (event) => {\r\n    const map = event.target;\r\n    const features = map.queryRenderedFeatures(event.point, {\r\n      layers: ['boundary-layer']\r\n    });\r\n\r\n    if (features && features.length > 0) {\r\n      const feature = features[0];\r\n      const coords = feature.geometry.coordinates.flat(2);\r\n\r\n      if (coords.length > 0) {\r\n        // Pair the coordinates\r\n        const pairedCoords = [];\r\n        for (let i = 0; i < coords.length; i += 2) {\r\n          pairedCoords.push([coords[i], coords[i + 1]]);\r\n        }\r\n\r\n        const validCoords = pairedCoords.filter(coord => !isNaN(coord[0]) && !isNaN(coord[1]));\r\n\r\n        if (validCoords.length > 0) {\r\n          const centroid = validCoords.reduce((acc, coord) => [acc[0] + coord[0], acc[1] + coord[1]], [0, 0]);\r\n          centroid[0] /= validCoords.length;\r\n          centroid[1] /= validCoords.length;\r\n\r\n          if (!isNaN(centroid[0]) && !isNaN(centroid[1])) {\r\n            setSelectedCounty({\r\n              county_name: feature.properties.county_name || \"Unknown County\",\r\n              healthIndicator: feature.properties.indicator_value || \"N/A\",\r\n              category: feature.properties.category || \"N/A\",\r\n              indicator:feature.properties.indicator || \"N/A\",\r\n              longitude: centroid[0],\r\n              latitude: centroid[1],\r\n            });\r\n            \r\n          } else {\r\n            console.warn(\"Centroid is not a valid LngLat object.\");\r\n          }\r\n        } else {\r\n          console.warn(\"No valid coordinates found for the feature.\");\r\n        }\r\n      } else {\r\n        console.warn(\"No coordinates found for the feature.\");\r\n      }\r\n    } else {\r\n      console.warn(\"No features found at the clicked location.\");\r\n    }\r\n  };\r\n\r\n  // Filter out duplicate categories for the legend\r\n  const uniqueCategories = classification_data.reduce((acc, item) => {\r\n    if (!acc.some(category => category.category === item.category)) {\r\n      acc.push(item);\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  // Prepare data for the chart\r\n  const categoryCounts = classification_data.reduce((acc, item) => {\r\n    acc[item.category] = (acc[item.category] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n  \r\n\r\n  const chartData = {\r\n    labels: Object.keys(categoryCounts),\r\n    datasets: [\r\n      {\r\n        label: 'Count of Counties',\r\n        data: Object.values(categoryCounts),\r\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n        borderColor: 'rgba(75, 192, 192, 1)',\r\n        borderWidth: 3,\r\n      },\r\n    ],\r\n  };\r\n\r\nconst chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'bottom',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: `Chart showing count of counties`,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"map-container-inner\">\r\n      <Map\r\n        {...viewState}\r\n        onMove={(evt) => setViewState(evt.viewState)}\r\n        mapStyle=\"mapbox://styles/mapbox/light-v10\"\r\n        mapboxAccessToken={MAPBOX_TOKEN}\r\n        onClick={handleCountyClick}\r\n      >\r\n        {/* Render county boundary */}\r\n        {boundary && boundary.features && boundary.features.length > 0 && (\r\n          <Source id=\"county-boundary\" type=\"geojson\" data={boundary}>\r\n            <Layer\r\n              id=\"boundary-layer\"\r\n              type=\"fill\"\r\n              paint={{\r\n                \"fill-color\": [\r\n                  \"match\",\r\n                  [\"get\", \"category\"],\r\n                  \"High\", \"#FF0000\",\r\n                  \"Low\", \"#00FF00\",\r\n                  \"Moderate\", \"#0000FF\",\r\n                  \r\n                  /* other */ \"#FF4D4D\"\r\n                ],\r\n                \"fill-opacity\": 0.4,\r\n                \"fill-outline-color\": \"#000000\"\r\n              }}\r\n              onClick={handleCountyClick}\r\n            />\r\n          </Source>\r\n        )}\r\n\r\n        {/* Show Popup when a county is clicked */}\r\n        {selectedCounty && (\r\n          <Popup\r\n            longitude={selectedCounty.longitude}\r\n            latitude={selectedCounty.latitude}\r\n            closeButton={true}\r\n            closeOnClick={false}\r\n            onClose={() => setSelectedCounty(null)}\r\n            anchor=\"top\"\r\n          >\r\n            <div style={{ fontSize: \"14px\", fontFamily: \"Arial, sans-serif\", padding: \"5px\" }}>\r\n              <h3 style={{ marginBottom: \"5px\", fontSize: \"16px\", fontWeight: \"bold\" }}>\r\n                {selectedCounty.county_name}\r\n              </h3>\r\n              <p><strong> {selectedCounty.indicator}</strong></p>\r\n              <p><strong> Count:</strong> {selectedCounty.healthIndicator}</p>\r\n              <p><strong>Category:</strong> {selectedCounty.category}</p>\r\n            </div>\r\n          </Popup>\r\n        )}\r\n      </Map>\r\n\r\n      {/* Render Legend */}\r\n      <div className=\"legend\">\r\n        <h4>Legend</h4>\r\n        <ul>\r\n          {uniqueCategories.map((item, index) => (\r\n            <li key={index} style={{ color: item.color }}>\r\n              {item.category}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Render Chart */}\r\n      <div className=\"chart-container\">\r\n        <Bar data={chartData} options={chartOptions} />\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}