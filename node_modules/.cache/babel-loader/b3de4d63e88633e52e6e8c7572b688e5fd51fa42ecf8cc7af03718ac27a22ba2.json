{"ast":null,"code":"import { useEffect, memo } from 'react';\nimport { applyReactStyle } from '../utils/apply-react-style';\nimport useControl from './use-control';\nfunction FullscreenControl(props) {\n  const ctrl = useControl(_ref => {\n    let {\n      mapLib\n    } = _ref;\n    return new mapLib.FullscreenControl({\n      container: props.containerId && document.getElementById(props.containerId)\n    });\n  }, {\n    position: props.position\n  });\n  useEffect(() => {\n    applyReactStyle(ctrl._controlContainer, props.style);\n  }, [props.style]);\n  return null;\n}\nexport default memo(FullscreenControl);","map":{"version":3,"names":["useEffect","memo","applyReactStyle","useControl","FullscreenControl","props","ctrl","_ref","mapLib","container","containerId","document","getElementById","position","_controlContainer","style"],"sources":["C:\\Users\\zacfr\\Downloads\\AAG_DASH\\compressed\\frontend\\node_modules\\react-map-gl\\src\\components\\fullscreen-control.tsx"],"sourcesContent":["/* global document */\nimport * as React from 'react';\nimport {useEffect, memo} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, FullscreenControlInstance} from '../types';\n\nexport type FullscreenControlProps<OptionsT> = Omit<OptionsT, 'container'> & {\n  /** Id of the DOM element which should be made full screen. By default, the map container\n   * element will be made full screen. */\n  containerId?: string;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction FullscreenControl<FullscreenControlOptions, ControlT extends FullscreenControlInstance>(\n  props: FullscreenControlProps<FullscreenControlOptions>\n): null {\n  const ctrl = useControl<ControlT>(\n    ({mapLib}) =>\n      new mapLib.FullscreenControl({\n        container: props.containerId && document.getElementById(props.containerId)\n      }) as ControlT,\n    {position: props.position}\n  );\n\n  useEffect(() => {\n    applyReactStyle(ctrl._controlContainer, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default memo(FullscreenControl);\n"],"mappings":"AAEA,SAAQA,SAAS,EAAEC,IAAI,QAAO,OAAO;AACrC,SAAQC,eAAe,QAAO,4BAA4B;AAC1D,OAAOC,UAAU,MAAM,eAAe;AActC,SAASC,iBAAiBA,CACxBC,KAAuD;EAEvD,MAAMC,IAAI,GAAGH,UAAU,CACrBI,IAAA;IAAA,IAAC;MAACC;IAAM,CAAC,GAAAD,IAAA;IAAA,OACP,IAAIC,MAAM,CAACJ,iBAAiB,CAAC;MAC3BK,SAAS,EAAEJ,KAAK,CAACK,WAAW,IAAIC,QAAQ,CAACC,cAAc,CAACP,KAAK,CAACK,WAAW;KAC1E,CAAa;EAAA,GAChB;IAACG,QAAQ,EAAER,KAAK,CAACQ;EAAQ,CAAC,CAC3B;EAEDb,SAAS,CAAC,MAAK;IACbE,eAAe,CAACI,IAAI,CAACQ,iBAAiB,EAAET,KAAK,CAACU,KAAK,CAAC;EACtD,CAAC,EAAE,CAACV,KAAK,CAACU,KAAK,CAAC,CAAC;EAEjB,OAAO,IAAI;AACb;AAEA,eAAed,IAAI,CAACG,iBAAiB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}