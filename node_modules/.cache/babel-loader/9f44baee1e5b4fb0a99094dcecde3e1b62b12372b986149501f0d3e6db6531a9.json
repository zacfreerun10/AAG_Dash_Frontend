{"ast":null,"code":"import{useEffect,useState}from\"react\";import Map,{Marker,Source,Layer,Popup}from\"react-map-gl\";import\"mapbox-gl/dist/mapbox-gl.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MAPBOX_TOKEN=\"pk.eyJ1IjoibWV0cm9raW0yMTciLCJhIjoiY2x4dzFrazJxMmJkajJycHpnNThpYjZpZiJ9.l0lDGi84xouJXT_uq91FOQ\";export default function HospitalMap(_ref){let{hospitals,boundary}=_ref;const[viewState,setViewState]=useState({longitude:-95.7133,latitude:37.0902,zoom:4});const[selectedHospital,setSelectedHospital]=useState(null);useEffect(()=>{console.log(\"üè• Hospitals received:\",hospitals);console.log(\"üó∫Ô∏è Boundary received:\",boundary);if(hospitals.length>0){const lons=hospitals.map(h=>h.geometry.coordinates[0]);const lats=hospitals.map(h=>h.geometry.coordinates[1]);if(lons.length>0&&lats.length>0){const minLon=Math.min(...lons);const maxLon=Math.max(...lons);const minLat=Math.min(...lats);const maxLat=Math.max(...lats);setViewState(prevState=>({...prevState,longitude:(minLon+maxLon)/2,latitude:(minLat+maxLat)/2,zoom:10,transitionDuration:1000}));}}else if(boundary&&boundary.features){// Adjust view state based on boundary if hospitals are not available\nconst coordinates=boundary.features[0].geometry.coordinates[0];const lons=coordinates.map(coord=>coord[0]);const lats=coordinates.map(coord=>coord[1]);const minLon=Math.min(...lons);const maxLon=Math.max(...lons);const minLat=Math.min(...lats);const maxLat=Math.max(...lats);setViewState(prevState=>({...prevState,longitude:(minLon+maxLon)/2,latitude:(minLat+maxLat)/2,zoom:10,transitionDuration:1000}));}},[hospitals,boundary]);return/*#__PURE__*/_jsx(\"div\",{className:\"map-container-inner\",children:/*#__PURE__*/_jsxs(Map,{...viewState,onMove:evt=>setViewState(evt.viewState),mapStyle:\"mapbox://styles/mapbox/streets-v11\",mapboxAccessToken:MAPBOX_TOKEN,children:[hospitals.length>0&&hospitals.map((h,index)=>/*#__PURE__*/_jsx(Marker,{longitude:h.geometry.coordinates[0],latitude:h.geometry.coordinates[1],children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedHospital(h),style:{background:\"none\",border:\"none\",cursor:\"pointer\",fontSize:\"24px\"},children:\"\\uD83C\\uDFE5\"})},index)),selectedHospital&&/*#__PURE__*/_jsx(Popup,{longitude:selectedHospital.geometry.coordinates[0],latitude:selectedHospital.geometry.coordinates[1],closeButton:true,closeOnClick:false,onClose:()=>setSelectedHospital(null),anchor:\"top\",children:/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:\"14px\",fontFamily:\"Arial, sans-serif\",padding:\"5px\"},children:[/*#__PURE__*/_jsx(\"h3\",{style:{marginBottom:\"5px\",fontSize:\"16px\",fontWeight:\"bold\"},children:selectedHospital.properties.LandmkName||\"Unknown Hospital\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCCD Address:\"}),\" \",selectedHospital.properties.Address||\"N/A\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83C\\uDFD9\\uFE0F City:\"}),\" \",selectedHospital.properties.City||\"N/A\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCDE Phone:\"}),\" \",selectedHospital.properties.Phone.trim()||\"N/A\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83C\\uDF10 Website:\"}),\" \",/*#__PURE__*/_jsx(\"a\",{href:selectedHospital.properties.URL,target:\"_blank\",rel:\"noopener noreferrer\",children:\"Visit\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83C\\uDFE5 Type:\"}),\" \",selectedHospital.properties.SrcTyp||\"N/A\"]})]})}),boundary&&boundary.features&&/*#__PURE__*/_jsx(Source,{id:\"county-boundary\",type:\"geojson\",data:boundary,children:/*#__PURE__*/_jsx(Layer,{id:\"boundary-layer\",type:\"line\",paint:{\"line-color\":\"#ff0000\",\"line-width\":3}})})]})});}","map":{"version":3,"names":["useEffect","useState","Map","Marker","Source","Layer","Popup","jsx","_jsx","jsxs","_jsxs","MAPBOX_TOKEN","HospitalMap","_ref","hospitals","boundary","viewState","setViewState","longitude","latitude","zoom","selectedHospital","setSelectedHospital","console","log","length","lons","map","h","geometry","coordinates","lats","minLon","Math","min","maxLon","max","minLat","maxLat","prevState","transitionDuration","features","coord","className","children","onMove","evt","mapStyle","mapboxAccessToken","index","onClick","style","background","border","cursor","fontSize","closeButton","closeOnClick","onClose","anchor","fontFamily","padding","marginBottom","fontWeight","properties","LandmkName","Address","City","Phone","trim","href","URL","target","rel","SrcTyp","id","type","data","paint"],"sources":["C:/Users/zacfr/Downloads/AAG_DASH/compressed/frontend/src/components/HospitalMap.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Map, { Marker, Source, Layer, Popup } from \"react-map-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\n\r\nconst MAPBOX_TOKEN = \"pk.eyJ1IjoibWV0cm9raW0yMTciLCJhIjoiY2x4dzFrazJxMmJkajJycHpnNThpYjZpZiJ9.l0lDGi84xouJXT_uq91FOQ\";\r\n\r\nexport default function HospitalMap({ hospitals, boundary }) {\r\n  const [viewState, setViewState] = useState({\r\n    longitude: -95.7133,\r\n    latitude: 37.0902,\r\n    zoom: 4\r\n  });\r\n  const [selectedHospital, setSelectedHospital] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log(\"üè• Hospitals received:\", hospitals);\r\n    console.log(\"üó∫Ô∏è Boundary received:\", boundary);\r\n\r\n    if (hospitals.length > 0) {\r\n      const lons = hospitals.map(h => h.geometry.coordinates[0]);\r\n      const lats = hospitals.map(h => h.geometry.coordinates[1]);\r\n\r\n      if (lons.length > 0 && lats.length > 0) {\r\n        const minLon = Math.min(...lons);\r\n        const maxLon = Math.max(...lons);\r\n        const minLat = Math.min(...lats);\r\n        const maxLat = Math.max(...lats);\r\n\r\n        setViewState(prevState => ({\r\n          ...prevState,\r\n          longitude: (minLon + maxLon) / 2,\r\n          latitude: (minLat + maxLat) / 2,\r\n          zoom: 10,\r\n          transitionDuration: 1000\r\n        }));\r\n      }\r\n    } else if (boundary && boundary.features) {\r\n      // Adjust view state based on boundary if hospitals are not available\r\n      const coordinates = boundary.features[0].geometry.coordinates[0];\r\n      const lons = coordinates.map(coord => coord[0]);\r\n      const lats = coordinates.map(coord => coord[1]);\r\n\r\n      const minLon = Math.min(...lons);\r\n      const maxLon = Math.max(...lons);\r\n      const minLat = Math.min(...lats);\r\n      const maxLat = Math.max(...lats);\r\n\r\n      setViewState(prevState => ({\r\n        ...prevState,\r\n        longitude: (minLon + maxLon) / 2,\r\n        latitude: (minLat + maxLat) / 2,\r\n        zoom: 10,\r\n        transitionDuration: 1000\r\n      }));\r\n    }\r\n  }, [hospitals, boundary]);\r\n\r\n  return (\r\n    <div className=\"map-container-inner\" >\r\n      <Map\r\n        {...viewState}\r\n        onMove={(evt) => setViewState(evt.viewState)}\r\n        mapStyle=\"mapbox://styles/mapbox/streets-v11\"\r\n        mapboxAccessToken={MAPBOX_TOKEN}\r\n      >\r\n        {hospitals.length > 0 &&\r\n          hospitals.map((h, index) => (\r\n            <Marker\r\n              key={index}\r\n              longitude={h.geometry.coordinates[0]}\r\n              latitude={h.geometry.coordinates[1]}\r\n            >\r\n              <button\r\n                onClick={() => setSelectedHospital(h)}\r\n                style={{\r\n                  background: \"none\",\r\n                  border: \"none\",\r\n                  cursor: \"pointer\",\r\n                  fontSize: \"24px\",\r\n                }}\r\n              >\r\n                üè•\r\n              </button>\r\n            </Marker>\r\n          ))}\r\n\r\n        {selectedHospital && (\r\n          <Popup\r\n            longitude={selectedHospital.geometry.coordinates[0]}\r\n            latitude={selectedHospital.geometry.coordinates[1]}\r\n            closeButton={true}\r\n            closeOnClick={false}\r\n            onClose={() => setSelectedHospital(null)}\r\n            anchor=\"top\"\r\n          >\r\n            <div style={{ fontSize: \"14px\", fontFamily: \"Arial, sans-serif\", padding: \"5px\" }}>\r\n              <h3 style={{ marginBottom: \"5px\", fontSize: \"16px\", fontWeight: \"bold\" }}>\r\n                {selectedHospital.properties.LandmkName || \"Unknown Hospital\"}\r\n              </h3>\r\n              <p><strong>üìç Address:</strong> {selectedHospital.properties.Address || \"N/A\"}</p>\r\n              <p><strong>üèôÔ∏è City:</strong> {selectedHospital.properties.City || \"N/A\"}</p>\r\n              <p><strong>üìû Phone:</strong> {selectedHospital.properties.Phone.trim() || \"N/A\"}</p>\r\n              <p><strong>üåê Website:</strong> <a href={selectedHospital.properties.URL} target=\"_blank\" rel=\"noopener noreferrer\">Visit</a></p>\r\n              <p><strong>üè• Type:</strong> {selectedHospital.properties.SrcTyp || \"N/A\"}</p>\r\n            </div>\r\n          </Popup>\r\n        )}\r\n\r\n        {boundary && boundary.features && (\r\n          <Source\r\n            id=\"county-boundary\"\r\n            type=\"geojson\"\r\n            data={boundary}\r\n          >\r\n            <Layer\r\n              id=\"boundary-layer\"\r\n              type=\"line\"\r\n              paint={{ \"line-color\": \"#ff0000\", \"line-width\": 3 }}\r\n            />\r\n          </Source>\r\n        )}\r\n      </Map>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}