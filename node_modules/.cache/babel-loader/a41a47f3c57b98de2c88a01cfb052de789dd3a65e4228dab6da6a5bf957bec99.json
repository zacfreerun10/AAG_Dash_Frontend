{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zacfr\\\\Downloads\\\\AAG_DASH\\\\compressed\\\\frontend\\\\src\\\\components\\\\HealthIndicatorMap.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Map, { Source, Layer, Popup } from \"react-map-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst MAPBOX_TOKEN = \"pk.eyJ1IjoibWV0cm9raW0yMTciLCJhIjoiY2x4dzFrazJxMmJkajJycHpnNThpYjZpZiJ9.l0lDGi84xouJXT_uq91FOQ\";\nexport default function HealthIndicatorMap({\n  boundary = [],\n  classification_data = [],\n  data\n}) {\n  _s();\n  console.log(\"boundary prop:\", boundary);\n  const [viewState, setViewState] = useState({\n    longitude: -95.7133,\n    latitude: 37.0902,\n    zoom: 6\n  });\n  const [selectedCounty, setSelectedCounty] = useState(null);\n  useEffect(() => {\n    if (boundary.features.length > 0) {\n      console.log(\"🗺️ Updating Health Indicator Map with multiple boundaries:\", boundary);\n\n      // Extract ALL boundary coordinates for centering the map\n      const allCoords = boundary.features.flatMap(b => {\n        var _b$geometry;\n        return ((_b$geometry = b.geometry) === null || _b$geometry === void 0 ? void 0 : _b$geometry.type) === \"Polygon\" ? b.geometry.coordinates[0] : b.geometry.coordinates.flat(1) || [];\n      });\n      const lons = allCoords.map(c => c[0]);\n      const lats = allCoords.map(c => c[1]);\n      if (lons.length > 0 && lats.length > 0) {\n        const minLon = Math.min(...lons);\n        const maxLon = Math.max(...lons);\n        const minLat = Math.min(...lats);\n        const maxLat = Math.max(...lats);\n        setViewState({\n          longitude: (minLon + maxLon) / 2,\n          latitude: (minLat + maxLat) / 2,\n          zoom: 6,\n          // Adjust zoom for multiple counties\n          transitionDuration: 1000\n        });\n      }\n    }\n  }, [boundary]);\n  const handleCountyClick = event => {\n    const map = event.target;\n    const features = map.queryRenderedFeatures(event.point, {\n      layers: ['boundary-layer']\n    });\n    if (features && features.length > 0) {\n      const feature = features[0];\n      const coords = feature.geometry.coordinates.flat(2);\n      if (coords.length > 0) {\n        // Pair the coordinates\n        const pairedCoords = [];\n        for (let i = 0; i < coords.length; i += 2) {\n          pairedCoords.push([coords[i], coords[i + 1]]);\n        }\n        const validCoords = pairedCoords.filter(coord => !isNaN(coord[0]) && !isNaN(coord[1]));\n        if (validCoords.length > 0) {\n          const centroid = validCoords.reduce((acc, coord) => [acc[0] + coord[0], acc[1] + coord[1]], [0, 0]);\n          centroid[0] /= validCoords.length;\n          centroid[1] /= validCoords.length;\n          if (!isNaN(centroid[0]) && !isNaN(centroid[1])) {\n            setSelectedCounty({\n              county_name: feature.properties.county_name || \"Unknown County\",\n              healthIndicator: feature.properties.indicator_value || \"N/A\",\n              category: feature.properties.category || \"N/A\",\n              indicator: feature.properties.indicator || \"N/A\",\n              longitude: centroid[0],\n              latitude: centroid[1]\n            });\n          } else {\n            console.warn(\"Centroid is not a valid LngLat object.\");\n          }\n        } else {\n          console.warn(\"No valid coordinates found for the feature.\");\n        }\n      } else {\n        console.warn(\"No coordinates found for the feature.\");\n      }\n    } else {\n      console.warn(\"No features found at the clicked location.\");\n    }\n  };\n\n  // Filter out duplicate categories for the legend\n  const uniqueCategories = classification_data.reduce((acc, item) => {\n    if (!acc.some(category => category.category === item.category)) {\n      acc.push(item);\n    }\n    return acc;\n  }, []);\n\n  // Prepare data for the chart\n  const categoryCounts = classification_data.reduce((acc, item) => {\n    acc[item.category] = (acc[item.category] || 0) + 1;\n    return acc;\n  }, {});\n  const chartData = {\n    labels: Object.keys(categoryCounts),\n    datasets: [{\n      label: 'Count of Counties',\n      data: Object.values(categoryCounts),\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 3\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'bottom'\n      },\n      title: {\n        display: true,\n        text: `Chart showing count of counties`\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container-inner\",\n    children: [/*#__PURE__*/_jsxDEV(Map, {\n      ...viewState,\n      onMove: evt => setViewState(evt.viewState),\n      mapStyle: \"mapbox://styles/mapbox/light-v10\",\n      mapboxAccessToken: MAPBOX_TOKEN,\n      onClick: handleCountyClick,\n      children: [boundary && boundary.features && boundary.features.length > 0 && /*#__PURE__*/_jsxDEV(Source, {\n        id: \"county-boundary\",\n        type: \"geojson\",\n        data: boundary,\n        children: /*#__PURE__*/_jsxDEV(Layer, {\n          id: \"boundary-layer\",\n          type: \"fill\",\n          paint: {\n            \"fill-color\": [\"match\", [\"get\", \"category\"], \"High\", \"#FF0000\", \"Low\", \"#00FF00\", \"Moderate\", \"#0000FF\", /* other */\"#FF4D4D\"],\n            \"fill-opacity\": 0.4,\n            \"fill-outline-color\": \"#000000\"\n          },\n          onClick: handleCountyClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), selectedCounty && /*#__PURE__*/_jsxDEV(Popup, {\n        longitude: selectedCounty.longitude,\n        latitude: selectedCounty.latitude,\n        closeButton: true,\n        closeOnClick: false,\n        onClose: () => setSelectedCounty(null),\n        anchor: \"top\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: \"14px\",\n            fontFamily: \"Arial, sans-serif\",\n            padding: \"5px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginBottom: \"5px\",\n              fontSize: \"16px\",\n              fontWeight: \"bold\"\n            },\n            children: selectedCounty.county_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\" \", selectedCounty.indicator]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Count:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 18\n            }, this), \" \", selectedCounty.healthIndicator]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Category:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 18\n            }, this), \" \", selectedCounty.category]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Legend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: uniqueCategories.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            color: item.color\n          },\n          children: item.category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_s(HealthIndicatorMap, \"mfSZWs1zpJPHuDQlPd3A1EFsK8w=\");\n_c = HealthIndicatorMap;\nvar _c;\n$RefreshReg$(_c, \"HealthIndicatorMap\");","map":{"version":3,"names":["useEffect","useState","Map","Source","Layer","Popup","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","MAPBOX_TOKEN","HealthIndicatorMap","boundary","classification_data","data","_s","console","log","viewState","setViewState","longitude","latitude","zoom","selectedCounty","setSelectedCounty","features","length","allCoords","flatMap","b","_b$geometry","geometry","type","coordinates","flat","lons","map","c","lats","minLon","Math","min","maxLon","max","minLat","maxLat","transitionDuration","handleCountyClick","event","target","queryRenderedFeatures","point","layers","feature","coords","pairedCoords","i","push","validCoords","filter","coord","isNaN","centroid","reduce","acc","county_name","properties","healthIndicator","indicator_value","category","indicator","warn","uniqueCategories","item","some","categoryCounts","chartData","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","chartOptions","responsive","plugins","legend","position","title","display","text","className","children","onMove","evt","mapStyle","mapboxAccessToken","onClick","id","paint","fileName","_jsxFileName","lineNumber","columnNumber","closeButton","closeOnClick","onClose","anchor","style","fontSize","fontFamily","padding","marginBottom","fontWeight","index","color","options","_c","$RefreshReg$"],"sources":["C:/Users/zacfr/Downloads/AAG_DASH/compressed/frontend/src/components/HealthIndicatorMap.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Map, { Source, Layer, Popup } from \"react-map-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst MAPBOX_TOKEN = \"pk.eyJ1IjoibWV0cm9raW0yMTciLCJhIjoiY2x4dzFrazJxMmJkajJycHpnNThpYjZpZiJ9.l0lDGi84xouJXT_uq91FOQ\";\r\n\r\nexport default function HealthIndicatorMap({ boundary = [], classification_data = [], data }) {\r\n  console.log(\"boundary prop:\", boundary);\r\n\r\n\r\n  const [viewState, setViewState] = useState({\r\n    longitude: -95.7133,\r\n    latitude: 37.0902,\r\n    zoom: 6\r\n  });\r\n\r\n  const [selectedCounty, setSelectedCounty] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (boundary.features.length > 0) {\r\n      console.log(\"🗺️ Updating Health Indicator Map with multiple boundaries:\", boundary);\r\n\r\n      // Extract ALL boundary coordinates for centering the map\r\n      const allCoords = boundary.features.flatMap(b =>\r\n        b.geometry?.type === \"Polygon\"\r\n          ? b.geometry.coordinates[0]\r\n          : b.geometry.coordinates.flat(1) || []\r\n      );\r\n\r\n      const lons = allCoords.map(c => c[0]);\r\n      const lats = allCoords.map(c => c[1]);\r\n\r\n      if (lons.length > 0 && lats.length > 0) {\r\n        const minLon = Math.min(...lons);\r\n        const maxLon = Math.max(...lons);\r\n        const minLat = Math.min(...lats);\r\n        const maxLat = Math.max(...lats);\r\n\r\n        setViewState({\r\n          longitude: (minLon + maxLon) / 2,\r\n          latitude: (minLat + maxLat) / 2,\r\n          zoom: 6, // Adjust zoom for multiple counties\r\n          transitionDuration: 1000\r\n        });\r\n      }\r\n    }\r\n  }, [boundary]);\r\n\r\n  const handleCountyClick = (event) => {\r\n    const map = event.target;\r\n    const features = map.queryRenderedFeatures(event.point, {\r\n      layers: ['boundary-layer']\r\n    });\r\n\r\n    if (features && features.length > 0) {\r\n      const feature = features[0];\r\n      const coords = feature.geometry.coordinates.flat(2);\r\n\r\n      if (coords.length > 0) {\r\n        // Pair the coordinates\r\n        const pairedCoords = [];\r\n        for (let i = 0; i < coords.length; i += 2) {\r\n          pairedCoords.push([coords[i], coords[i + 1]]);\r\n        }\r\n\r\n        const validCoords = pairedCoords.filter(coord => !isNaN(coord[0]) && !isNaN(coord[1]));\r\n\r\n        if (validCoords.length > 0) {\r\n          const centroid = validCoords.reduce((acc, coord) => [acc[0] + coord[0], acc[1] + coord[1]], [0, 0]);\r\n          centroid[0] /= validCoords.length;\r\n          centroid[1] /= validCoords.length;\r\n\r\n          if (!isNaN(centroid[0]) && !isNaN(centroid[1])) {\r\n            setSelectedCounty({\r\n              county_name: feature.properties.county_name || \"Unknown County\",\r\n              healthIndicator: feature.properties.indicator_value || \"N/A\",\r\n              category: feature.properties.category || \"N/A\",\r\n              indicator:feature.properties.indicator || \"N/A\",\r\n              longitude: centroid[0],\r\n              latitude: centroid[1],\r\n            });\r\n            \r\n          } else {\r\n            console.warn(\"Centroid is not a valid LngLat object.\");\r\n          }\r\n        } else {\r\n          console.warn(\"No valid coordinates found for the feature.\");\r\n        }\r\n      } else {\r\n        console.warn(\"No coordinates found for the feature.\");\r\n      }\r\n    } else {\r\n      console.warn(\"No features found at the clicked location.\");\r\n    }\r\n  };\r\n\r\n  // Filter out duplicate categories for the legend\r\n  const uniqueCategories = classification_data.reduce((acc, item) => {\r\n    if (!acc.some(category => category.category === item.category)) {\r\n      acc.push(item);\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  // Prepare data for the chart\r\n  const categoryCounts = classification_data.reduce((acc, item) => {\r\n    acc[item.category] = (acc[item.category] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n  \r\n\r\n  const chartData = {\r\n    labels: Object.keys(categoryCounts),\r\n    datasets: [\r\n      {\r\n        label: 'Count of Counties',\r\n        data: Object.values(categoryCounts),\r\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n        borderColor: 'rgba(75, 192, 192, 1)',\r\n        borderWidth: 3,\r\n      },\r\n    ],\r\n  };\r\n\r\nconst chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'bottom',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: `Chart showing count of counties`,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"map-container-inner\">\r\n      <Map\r\n        {...viewState}\r\n        onMove={(evt) => setViewState(evt.viewState)}\r\n        mapStyle=\"mapbox://styles/mapbox/light-v10\"\r\n        mapboxAccessToken={MAPBOX_TOKEN}\r\n        onClick={handleCountyClick}\r\n      >\r\n        {/* Render county boundary */}\r\n        {boundary && boundary.features && boundary.features.length > 0 && (\r\n          <Source id=\"county-boundary\" type=\"geojson\" data={boundary}>\r\n            <Layer\r\n              id=\"boundary-layer\"\r\n              type=\"fill\"\r\n              paint={{\r\n                \"fill-color\": [\r\n                  \"match\",\r\n                  [\"get\", \"category\"],\r\n                  \"High\", \"#FF0000\",\r\n                  \"Low\", \"#00FF00\",\r\n                  \"Moderate\", \"#0000FF\",\r\n                  \r\n                  /* other */ \"#FF4D4D\"\r\n                ],\r\n                \"fill-opacity\": 0.4,\r\n                \"fill-outline-color\": \"#000000\"\r\n              }}\r\n              onClick={handleCountyClick}\r\n            />\r\n          </Source>\r\n        )}\r\n\r\n        {/* Show Popup when a county is clicked */}\r\n        {selectedCounty && (\r\n          <Popup\r\n            longitude={selectedCounty.longitude}\r\n            latitude={selectedCounty.latitude}\r\n            closeButton={true}\r\n            closeOnClick={false}\r\n            onClose={() => setSelectedCounty(null)}\r\n            anchor=\"top\"\r\n          >\r\n            <div style={{ fontSize: \"14px\", fontFamily: \"Arial, sans-serif\", padding: \"5px\" }}>\r\n              <h3 style={{ marginBottom: \"5px\", fontSize: \"16px\", fontWeight: \"bold\" }}>\r\n                {selectedCounty.county_name}\r\n              </h3>\r\n              <p><strong> {selectedCounty.indicator}</strong></p>\r\n              <p><strong> Count:</strong> {selectedCounty.healthIndicator}</p>\r\n              <p><strong>Category:</strong> {selectedCounty.category}</p>\r\n            </div>\r\n          </Popup>\r\n        )}\r\n      </Map>\r\n\r\n      {/* Render Legend */}\r\n      <div className=\"legend\">\r\n        <h4>Legend</h4>\r\n        <ul>\r\n          {uniqueCategories.map((item, index) => (\r\n            <li key={index} style={{ color: item.color }}>\r\n              {item.category}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Render Chart */}\r\n      <div className=\"chart-container\">\r\n        <Bar data={chartData} options={chartOptions} />\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}