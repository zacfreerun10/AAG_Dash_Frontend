{"ast":null,"code":"import{useEffect,useState}from\"react\";import Map,{Source,Layer,Popup}from\"react-map-gl\";import\"mapbox-gl/dist/mapbox-gl.css\";import{Pie}from\"react-chartjs-2\";import{Chart as ChartJS,ArcElement,Tooltip,Legend}from'chart.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(ArcElement,Tooltip,Legend);const MAPBOX_TOKEN=\"pk.eyJ1IjoibWV0cm9raW0yMTciLCJhIjoiY2x4dzFrazJxMmJkajJycHpnNThpYjZpZiJ9.l0lDGi84xouJXT_uq91FOQ\";export default function MortalityMap(_ref){var _topNData$;let{boundary,data}=_ref;console.log(\"boundary prop:\",boundary);const[viewState,setViewState]=useState({longitude:-95.7133,latitude:37.0902,zoom:6});const[selectedCounty,setSelectedCounty]=useState(null);const[topN,setTopN]=useState(50);// State to manage the number of counties to display in the pie chart\nuseEffect(()=>{if(boundary&&boundary.features&&boundary.features.length>0){console.log(\"🗺️ Updating Mortality Map with multiple boundaries:\",boundary);// Extract ALL boundary coordinates for centering the map\nconst allCoords=boundary.features.flatMap(b=>{var _b$geometry;return((_b$geometry=b.geometry)===null||_b$geometry===void 0?void 0:_b$geometry.type)===\"Polygon\"?b.geometry.coordinates[0]:b.geometry.coordinates.flat(1)||[];});const lons=allCoords.map(c=>c[0]);const lats=allCoords.map(c=>c[1]);if(lons.length>0&&lats.length>0){const minLon=Math.min(...lons);const maxLon=Math.max(...lons);const minLat=Math.min(...lats);const maxLat=Math.max(...lats);setViewState({longitude:(minLon+maxLon)/2,latitude:(minLat+maxLat)/2,zoom:6,// Adjust zoom for multiple counties\ntransitionDuration:1000});}}},[boundary]);const handleCountyClick=event=>{const map=event.target;const features=map.queryRenderedFeatures(event.point,{layers:['boundary-layer']});if(features&&features.length>0){const feature=features[0];const coords=feature.geometry.coordinates.flat(2);if(coords.length>0){// Pair the coordinates\nconst pairedCoords=[];for(let i=0;i<coords.length;i+=2){pairedCoords.push([coords[i],coords[i+1]]);}const validCoords=pairedCoords.filter(coord=>!isNaN(coord[0])&&!isNaN(coord[1]));if(validCoords.length>0){const centroid=validCoords.reduce((acc,coord)=>[acc[0]+coord[0],acc[1]+coord[1]],[0,0]);centroid[0]/=validCoords.length;centroid[1]/=validCoords.length;if(!isNaN(centroid[0])&&!isNaN(centroid[1])){var _feature$properties,_feature$properties2,_feature$properties3;setSelectedCounty({county_name:((_feature$properties=feature.properties)===null||_feature$properties===void 0?void 0:_feature$properties.county_name)||data.county_name||\"Unknown County\",indicator:((_feature$properties2=feature.properties)===null||_feature$properties2===void 0?void 0:_feature$properties2.indicator)||data.mortalityRate||\"N/A\",indicator_value:((_feature$properties3=feature.properties)===null||_feature$properties3===void 0?void 0:_feature$properties3.indicator_value)||\"N/A\",longitude:centroid[0],latitude:centroid[1]});}else{console.warn(\"Centroid is not a valid LngLat object.\");}}else{console.warn(\"No valid coordinates found for the feature.\");}}else{console.warn(\"No coordinates found for the feature.\");}}else{console.warn(\"No features found at the clicked location.\");}};// Prepare data for the pie chart\nconst topNData=(boundary.features||[]).slice(0,topN).map(feature=>({county_name:feature.properties.county_name,indicator:feature.properties.indicator,indicator_value:feature.properties.indicator_value}));const pieData={labels:topNData.map(item=>item.county_name),datasets:[{label:`${((_topNData$=topNData[0])===null||_topNData$===void 0?void 0:_topNData$.indicator)||'Indicator'}`,data:topNData.map(item=>item.indicator_value),backgroundColor:['#FF6384','#36A2EB','#FFCE56','#4BC0C0','#9966FF','#808000','#008080','#000080','#cc3366','#f88379 ','#FF5733','#33FF57','#5733FF','#FF33A8','#33A8FF','#A833FF','#FFD700','#40E0D0','#FF4500','#6A5ACD','#00FA9A','#DC143C','#8A2BE2','#FF6347','#4682B4','#D2691E','#9ACD32','#2E8B57','#B22222','#32CD32'],hoverBackgroundColor:['#FF6384','#36A2EB','#FFCE56','#4BC0C0','#9966FF','#808000','#008080','#000080','#cc3366','#f88379 ','#FF5733','#33FF57','#5733FF','#FF33A8','#33A8FF','#A833FF','#FFD700','#40E0D0','#FF4500','#6A5ACD','#00FA9A','#DC143C','#8A2BE2','#FF6347','#4682B4','#D2691E','#9ACD32','#2E8B57','#B22222','#32CD32']}]};const pieOptions={responsive:true,plugins:{legend:{position:'top',align:'start',labels:{boxWidth:20,padding:10}},title:{display:true,text:'Health Data Comparison of Counties'}}};const handleQuery=countyName=>{const county=boundary.features.find(feature=>feature.properties.county_name===countyName);if(county){setSelectedCounty({county_name:county.properties.county_name,indicator:county.properties.indicator,indicator_value:county.properties.indicator_value,longitude:county.geometry.coordinates[0][0][0],// Assuming the first coordinate is representative\nlatitude:county.geometry.coordinates[0][0][1]});}else{console.warn(`County ${countyName} not found.`);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"map-container-inner\",children:[/*#__PURE__*/_jsxs(Map,{...viewState,onMove:evt=>setViewState(evt.viewState),mapStyle:\"mapbox://styles/mapbox/light-v10\",mapboxAccessToken:MAPBOX_TOKEN,onClick:handleCountyClick,children:[boundary&&boundary.features&&boundary.features.length>0&&/*#__PURE__*/_jsx(Source,{id:\"county-boundary\",type:\"geojson\",data:{type:\"FeatureCollection\",features:boundary.features||[]},children:/*#__PURE__*/_jsx(Layer,{id:\"boundary-layer\",type:\"fill\",paint:{\"fill-color\":\"#ff4d4d\",\"fill-opacity\":0.4,\"fill-outline-color\":\"#000000\"},onClick:handleCountyClick})}),selectedCounty&&/*#__PURE__*/_jsx(Popup,{longitude:selectedCounty.longitude,latitude:selectedCounty.latitude,closeButton:true,closeOnClick:false,onClose:()=>setSelectedCounty(null),anchor:\"top\",children:/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:\"14px\",fontFamily:\"Arial, sans-serif\",padding:\"5px\"},children:[/*#__PURE__*/_jsx(\"h3\",{style:{marginBottom:\"5px\",fontSize:\"16px\",fontWeight:\"bold\"},children:selectedCounty.county_name}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[selectedCounty.indicator,\":\"]}),\" \",selectedCounty.indicator_value]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pie-chart-container\",children:/*#__PURE__*/_jsx(Pie,{data:pieData,options:pieOptions})})]});}","map":{"version":3,"names":["useEffect","useState","Map","Source","Layer","Popup","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","MAPBOX_TOKEN","MortalityMap","_ref","_topNData$","boundary","data","console","log","viewState","setViewState","longitude","latitude","zoom","selectedCounty","setSelectedCounty","topN","setTopN","features","length","allCoords","flatMap","b","_b$geometry","geometry","type","coordinates","flat","lons","map","c","lats","minLon","Math","min","maxLon","max","minLat","maxLat","transitionDuration","handleCountyClick","event","target","queryRenderedFeatures","point","layers","feature","coords","pairedCoords","i","push","validCoords","filter","coord","isNaN","centroid","reduce","acc","_feature$properties","_feature$properties2","_feature$properties3","county_name","properties","indicator","mortalityRate","indicator_value","warn","topNData","slice","pieData","labels","item","datasets","label","backgroundColor","hoverBackgroundColor","pieOptions","responsive","plugins","legend","position","align","boxWidth","padding","title","display","text","handleQuery","countyName","county","find","className","children","onMove","evt","mapStyle","mapboxAccessToken","onClick","id","paint","closeButton","closeOnClick","onClose","anchor","style","fontSize","fontFamily","marginBottom","fontWeight","options"],"sources":["C:/Users/zacfr/Downloads/AAG_DASH/compressed/frontend/src/components/MortalityMap.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Map, { Source, Layer, Popup } from \"react-map-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst MAPBOX_TOKEN = \"pk.eyJ1IjoibWV0cm9raW0yMTciLCJhIjoiY2x4dzFrazJxMmJkajJycHpnNThpYjZpZiJ9.l0lDGi84xouJXT_uq91FOQ\";\r\n\r\nexport default function MortalityMap({ boundary, data }) {\r\n  console.log(\"boundary prop:\", boundary);\r\n\r\n  const [viewState, setViewState] = useState({\r\n    longitude: -95.7133,\r\n    latitude: 37.0902,\r\n    zoom: 6\r\n  });\r\n\r\n  const [selectedCounty, setSelectedCounty] = useState(null);\r\n  const [topN, setTopN] = useState(50); // State to manage the number of counties to display in the pie chart\r\n\r\n  useEffect(() => {\r\n    if (boundary && boundary.features && boundary.features.length > 0) {\r\n      console.log(\"🗺️ Updating Mortality Map with multiple boundaries:\", boundary);\r\n\r\n      // Extract ALL boundary coordinates for centering the map\r\n      const allCoords = boundary.features.flatMap(b =>\r\n        b.geometry?.type === \"Polygon\"\r\n          ? b.geometry.coordinates[0]\r\n          : b.geometry.coordinates.flat(1) || []\r\n      );\r\n\r\n      const lons = allCoords.map(c => c[0]);\r\n      const lats = allCoords.map(c => c[1]);\r\n\r\n      if (lons.length > 0 && lats.length > 0) {\r\n        const minLon = Math.min(...lons);\r\n        const maxLon = Math.max(...lons);\r\n        const minLat = Math.min(...lats);\r\n        const maxLat = Math.max(...lats);\r\n\r\n        setViewState({\r\n          longitude: (minLon + maxLon) / 2,\r\n          latitude: (minLat + maxLat) / 2,\r\n          zoom: 6, // Adjust zoom for multiple counties\r\n          transitionDuration: 1000\r\n        });\r\n      }\r\n    }\r\n  }, [boundary]);\r\n\r\n  const handleCountyClick = (event) => {\r\n    const map = event.target;\r\n    const features = map.queryRenderedFeatures(event.point, {\r\n      layers: ['boundary-layer']\r\n    });\r\n  \r\n    if (features && features.length > 0) {\r\n      const feature = features[0];\r\n      const coords = feature.geometry.coordinates.flat(2);\r\n  \r\n      if (coords.length > 0) {\r\n        // Pair the coordinates\r\n        const pairedCoords = [];\r\n        for (let i = 0; i < coords.length; i += 2) {\r\n          pairedCoords.push([coords[i], coords[i + 1]]);\r\n        }\r\n  \r\n        const validCoords = pairedCoords.filter(coord => !isNaN(coord[0]) && !isNaN(coord[1]));\r\n  \r\n        if (validCoords.length > 0) {\r\n          const centroid = validCoords.reduce((acc, coord) => [acc[0] + coord[0], acc[1] + coord[1]], [0, 0]);\r\n          centroid[0] /= validCoords.length;\r\n          centroid[1] /= validCoords.length;\r\n  \r\n          if (!isNaN(centroid[0]) && !isNaN(centroid[1])) {\r\n            setSelectedCounty({\r\n              county_name: feature.properties?.county_name || data.county_name || \"Unknown County\",\r\n              indicator: feature.properties?.indicator || data.mortalityRate|| \"N/A\",\r\n              indicator_value:feature.properties?.indicator_value || \"N/A\",\r\n              longitude: centroid[0],\r\n              latitude: centroid[1],\r\n            });\r\n          } else {\r\n            console.warn(\"Centroid is not a valid LngLat object.\");\r\n          }\r\n        } else {\r\n          console.warn(\"No valid coordinates found for the feature.\");\r\n        }\r\n      } else {\r\n        console.warn(\"No coordinates found for the feature.\");\r\n      }\r\n    } else {\r\n      console.warn(\"No features found at the clicked location.\");\r\n    }\r\n  };\r\n\r\n  // Prepare data for the pie chart\r\n  const topNData = (boundary.features || []).slice(0, topN).map(feature => ({\r\n    county_name: feature.properties.county_name,\r\n    indicator: feature.properties.indicator,\r\n    indicator_value: feature.properties.indicator_value\r\n  }));\r\n\r\n  const pieData = {\r\n    labels: topNData.map(item => item.county_name),\r\n    datasets: [\r\n      {\r\n        label: `${topNData[0]?.indicator || 'Indicator'}`,\r\n        data: topNData.map(item => item.indicator_value),\r\n        backgroundColor: [\r\n          '#FF6384',\r\n          '#36A2EB',\r\n          '#FFCE56',\r\n          '#4BC0C0',\r\n          '#9966FF',\r\n          '#808000',\r\n          '#008080',\r\n          '#000080',\r\n          '#cc3366',\r\n          '#f88379 ',\r\n          '#FF5733',\r\n          '#33FF57',\r\n          '#5733FF',\r\n          '#FF33A8',\r\n          '#33A8FF',\r\n          '#A833FF',\r\n          '#FFD700',\r\n          '#40E0D0',\r\n'#FF4500',\r\n'#6A5ACD',\r\n'#00FA9A',\r\n'#DC143C',\r\n'#8A2BE2',\r\n'#FF6347',\r\n'#4682B4',\r\n'#D2691E',\r\n'#9ACD32',\r\n'#2E8B57',\r\n'#B22222',\r\n'#32CD32',\r\n        ],\r\n        hoverBackgroundColor: [\r\n          '#FF6384',\r\n          '#36A2EB',\r\n          '#FFCE56',\r\n          '#4BC0C0',\r\n          '#9966FF',\r\n          '#808000',\r\n          '#008080',\r\n          '#000080',\r\n          '#cc3366',\r\n          '#f88379 ',\r\n          '#FF5733',\r\n'#33FF57',\r\n'#5733FF',\r\n'#FF33A8',\r\n'#33A8FF',\r\n'#A833FF',\r\n'#FFD700',\r\n'#40E0D0',\r\n'#FF4500',\r\n'#6A5ACD',\r\n'#00FA9A',\r\n'#DC143C',\r\n'#8A2BE2',\r\n'#FF6347',\r\n'#4682B4',\r\n'#D2691E',\r\n'#9ACD32',\r\n'#2E8B57',\r\n'#B22222',\r\n'#32CD32',\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  const pieOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        align: 'start',\r\n        labels: {\r\n          boxWidth: 20,\r\n          padding: 10,\r\n        },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Health Data Comparison of Counties',\r\n      },\r\n    },\r\n  };\r\n\r\n  const handleQuery = (countyName) => {\r\n    const county = boundary.features.find(feature => feature.properties.county_name === countyName);\r\n    if (county) {\r\n      setSelectedCounty({\r\n        county_name: county.properties.county_name,\r\n        indicator: county.properties.indicator,\r\n        indicator_value: county.properties.indicator_value,\r\n        longitude: county.geometry.coordinates[0][0][0], // Assuming the first coordinate is representative\r\n        latitude: county.geometry.coordinates[0][0][1],\r\n      });\r\n    } else {\r\n      console.warn(`County ${countyName} not found.`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"map-container-inner\">\r\n      <Map\r\n        {...viewState}\r\n        onMove={(evt) => setViewState(evt.viewState)}\r\n        mapStyle=\"mapbox://styles/mapbox/light-v10\"\r\n        mapboxAccessToken={MAPBOX_TOKEN}\r\n        onClick={handleCountyClick}\r\n      >\r\n        {/* Render county boundary */}\r\n        {boundary && boundary.features && boundary.features.length > 0 && (\r\n          <Source id=\"county-boundary\" type=\"geojson\" data={{ type: \"FeatureCollection\", features: boundary.features || [] }}>\r\n            <Layer\r\n              id=\"boundary-layer\"\r\n              type=\"fill\"\r\n              paint={{\r\n                \"fill-color\": \"#ff4d4d\",\r\n                \"fill-opacity\": 0.4,\r\n                \"fill-outline-color\": \"#000000\"\r\n              }}\r\n              onClick={handleCountyClick}\r\n            />\r\n          </Source>\r\n        )}\r\n\r\n        {/* Show Popup when a county is clicked */}\r\n        {selectedCounty && (\r\n          <Popup\r\n            longitude={selectedCounty.longitude}\r\n            latitude={selectedCounty.latitude}\r\n            closeButton={true}\r\n            closeOnClick={false}\r\n            onClose={() => setSelectedCounty(null)}\r\n            anchor=\"top\"\r\n          >\r\n            <div style={{ fontSize: \"14px\", fontFamily: \"Arial, sans-serif\", padding: \"5px\" }}>\r\n              <h3 style={{ marginBottom: \"5px\", fontSize: \"16px\", fontWeight: \"bold\" }}>\r\n                {selectedCounty.county_name}\r\n              </h3>\r\n              <p><strong>{selectedCounty.indicator}:</strong> {selectedCounty.indicator_value}</p>\r\n            </div>\r\n          </Popup>\r\n        )}\r\n      </Map>\r\n      {/* Render Pie Chart */}\r\n      <div className=\"pie-chart-container\">\r\n        <Pie data={pieData} options={pieOptions} />\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,CAAAC,GAAG,EAAIC,MAAM,CAAEC,KAAK,CAAEC,KAAK,KAAQ,cAAc,CACxD,MAAO,8BAA8B,CACrC,OAASC,GAAG,KAAQ,iBAAiB,CACrC,OAASC,KAAK,GAAI,CAAAC,OAAO,CAAEC,UAAU,CAAEC,OAAO,CAAEC,MAAM,KAAQ,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzEP,OAAO,CAACQ,QAAQ,CAACP,UAAU,CAAEC,OAAO,CAAEC,MAAM,CAAC,CAE7C,KAAM,CAAAM,YAAY,CAAG,gGAAgG,CAErH,cAAe,SAAS,CAAAC,YAAYA,CAAAC,IAAA,CAAqB,KAAAC,UAAA,IAApB,CAAEC,QAAQ,CAAEC,IAAK,CAAC,CAAAH,IAAA,CACrDI,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEH,QAAQ,CAAC,CAEvC,KAAM,CAACI,SAAS,CAAEC,YAAY,CAAC,CAAGzB,QAAQ,CAAC,CACzC0B,SAAS,CAAE,CAAC,OAAO,CACnBC,QAAQ,CAAE,OAAO,CACjBC,IAAI,CAAE,CACR,CAAC,CAAC,CAEF,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAG9B,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAAC+B,IAAI,CAAEC,OAAO,CAAC,CAAGhC,QAAQ,CAAC,EAAE,CAAC,CAAE;AAEtCD,SAAS,CAAC,IAAM,CACd,GAAIqB,QAAQ,EAAIA,QAAQ,CAACa,QAAQ,EAAIb,QAAQ,CAACa,QAAQ,CAACC,MAAM,CAAG,CAAC,CAAE,CACjEZ,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAEH,QAAQ,CAAC,CAE7E;AACA,KAAM,CAAAe,SAAS,CAAGf,QAAQ,CAACa,QAAQ,CAACG,OAAO,CAACC,CAAC,OAAAC,WAAA,OAC3C,EAAAA,WAAA,CAAAD,CAAC,CAACE,QAAQ,UAAAD,WAAA,iBAAVA,WAAA,CAAYE,IAAI,IAAK,SAAS,CAC1BH,CAAC,CAACE,QAAQ,CAACE,WAAW,CAAC,CAAC,CAAC,CACzBJ,CAAC,CAACE,QAAQ,CAACE,WAAW,CAACC,IAAI,CAAC,CAAC,CAAC,EAAI,EAAE,EAC1C,CAAC,CAED,KAAM,CAAAC,IAAI,CAAGR,SAAS,CAACS,GAAG,CAACC,CAAC,EAAIA,CAAC,CAAC,CAAC,CAAC,CAAC,CACrC,KAAM,CAAAC,IAAI,CAAGX,SAAS,CAACS,GAAG,CAACC,CAAC,EAAIA,CAAC,CAAC,CAAC,CAAC,CAAC,CAErC,GAAIF,IAAI,CAACT,MAAM,CAAG,CAAC,EAAIY,IAAI,CAACZ,MAAM,CAAG,CAAC,CAAE,CACtC,KAAM,CAAAa,MAAM,CAAGC,IAAI,CAACC,GAAG,CAAC,GAAGN,IAAI,CAAC,CAChC,KAAM,CAAAO,MAAM,CAAGF,IAAI,CAACG,GAAG,CAAC,GAAGR,IAAI,CAAC,CAChC,KAAM,CAAAS,MAAM,CAAGJ,IAAI,CAACC,GAAG,CAAC,GAAGH,IAAI,CAAC,CAChC,KAAM,CAAAO,MAAM,CAAGL,IAAI,CAACG,GAAG,CAAC,GAAGL,IAAI,CAAC,CAEhCrB,YAAY,CAAC,CACXC,SAAS,CAAE,CAACqB,MAAM,CAAGG,MAAM,EAAI,CAAC,CAChCvB,QAAQ,CAAE,CAACyB,MAAM,CAAGC,MAAM,EAAI,CAAC,CAC/BzB,IAAI,CAAE,CAAC,CAAE;AACT0B,kBAAkB,CAAE,IACtB,CAAC,CAAC,CACJ,CACF,CACF,CAAC,CAAE,CAAClC,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAmC,iBAAiB,CAAIC,KAAK,EAAK,CACnC,KAAM,CAAAZ,GAAG,CAAGY,KAAK,CAACC,MAAM,CACxB,KAAM,CAAAxB,QAAQ,CAAGW,GAAG,CAACc,qBAAqB,CAACF,KAAK,CAACG,KAAK,CAAE,CACtDC,MAAM,CAAE,CAAC,gBAAgB,CAC3B,CAAC,CAAC,CAEF,GAAI3B,QAAQ,EAAIA,QAAQ,CAACC,MAAM,CAAG,CAAC,CAAE,CACnC,KAAM,CAAA2B,OAAO,CAAG5B,QAAQ,CAAC,CAAC,CAAC,CAC3B,KAAM,CAAA6B,MAAM,CAAGD,OAAO,CAACtB,QAAQ,CAACE,WAAW,CAACC,IAAI,CAAC,CAAC,CAAC,CAEnD,GAAIoB,MAAM,CAAC5B,MAAM,CAAG,CAAC,CAAE,CACrB;AACA,KAAM,CAAA6B,YAAY,CAAG,EAAE,CACvB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGF,MAAM,CAAC5B,MAAM,CAAE8B,CAAC,EAAI,CAAC,CAAE,CACzCD,YAAY,CAACE,IAAI,CAAC,CAACH,MAAM,CAACE,CAAC,CAAC,CAAEF,MAAM,CAACE,CAAC,CAAG,CAAC,CAAC,CAAC,CAAC,CAC/C,CAEA,KAAM,CAAAE,WAAW,CAAGH,YAAY,CAACI,MAAM,CAACC,KAAK,EAAI,CAACC,KAAK,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC,EAAI,CAACC,KAAK,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAEtF,GAAIF,WAAW,CAAChC,MAAM,CAAG,CAAC,CAAE,CAC1B,KAAM,CAAAoC,QAAQ,CAAGJ,WAAW,CAACK,MAAM,CAAC,CAACC,GAAG,CAAEJ,KAAK,GAAK,CAACI,GAAG,CAAC,CAAC,CAAC,CAAGJ,KAAK,CAAC,CAAC,CAAC,CAAEI,GAAG,CAAC,CAAC,CAAC,CAAGJ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACnGE,QAAQ,CAAC,CAAC,CAAC,EAAIJ,WAAW,CAAChC,MAAM,CACjCoC,QAAQ,CAAC,CAAC,CAAC,EAAIJ,WAAW,CAAChC,MAAM,CAEjC,GAAI,CAACmC,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAI,CAACD,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE,KAAAG,mBAAA,CAAAC,oBAAA,CAAAC,oBAAA,CAC9C7C,iBAAiB,CAAC,CAChB8C,WAAW,CAAE,EAAAH,mBAAA,CAAAZ,OAAO,CAACgB,UAAU,UAAAJ,mBAAA,iBAAlBA,mBAAA,CAAoBG,WAAW,GAAIvD,IAAI,CAACuD,WAAW,EAAI,gBAAgB,CACpFE,SAAS,CAAE,EAAAJ,oBAAA,CAAAb,OAAO,CAACgB,UAAU,UAAAH,oBAAA,iBAAlBA,oBAAA,CAAoBI,SAAS,GAAIzD,IAAI,CAAC0D,aAAa,EAAG,KAAK,CACtEC,eAAe,CAAC,EAAAL,oBAAA,CAAAd,OAAO,CAACgB,UAAU,UAAAF,oBAAA,iBAAlBA,oBAAA,CAAoBK,eAAe,GAAI,KAAK,CAC5DtD,SAAS,CAAE4C,QAAQ,CAAC,CAAC,CAAC,CACtB3C,QAAQ,CAAE2C,QAAQ,CAAC,CAAC,CACtB,CAAC,CAAC,CACJ,CAAC,IAAM,CACLhD,OAAO,CAAC2D,IAAI,CAAC,wCAAwC,CAAC,CACxD,CACF,CAAC,IAAM,CACL3D,OAAO,CAAC2D,IAAI,CAAC,6CAA6C,CAAC,CAC7D,CACF,CAAC,IAAM,CACL3D,OAAO,CAAC2D,IAAI,CAAC,uCAAuC,CAAC,CACvD,CACF,CAAC,IAAM,CACL3D,OAAO,CAAC2D,IAAI,CAAC,4CAA4C,CAAC,CAC5D,CACF,CAAC,CAED;AACA,KAAM,CAAAC,QAAQ,CAAG,CAAC9D,QAAQ,CAACa,QAAQ,EAAI,EAAE,EAAEkD,KAAK,CAAC,CAAC,CAAEpD,IAAI,CAAC,CAACa,GAAG,CAACiB,OAAO,GAAK,CACxEe,WAAW,CAAEf,OAAO,CAACgB,UAAU,CAACD,WAAW,CAC3CE,SAAS,CAAEjB,OAAO,CAACgB,UAAU,CAACC,SAAS,CACvCE,eAAe,CAAEnB,OAAO,CAACgB,UAAU,CAACG,eACtC,CAAC,CAAC,CAAC,CAEH,KAAM,CAAAI,OAAO,CAAG,CACdC,MAAM,CAAEH,QAAQ,CAACtC,GAAG,CAAC0C,IAAI,EAAIA,IAAI,CAACV,WAAW,CAAC,CAC9CW,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,GAAG,EAAArE,UAAA,CAAA+D,QAAQ,CAAC,CAAC,CAAC,UAAA/D,UAAA,iBAAXA,UAAA,CAAa2D,SAAS,GAAI,WAAW,EAAE,CACjDzD,IAAI,CAAE6D,QAAQ,CAACtC,GAAG,CAAC0C,IAAI,EAAIA,IAAI,CAACN,eAAe,CAAC,CAChDS,eAAe,CAAE,CACf,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,UAAU,CACV,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACnB,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACA,CACDC,oBAAoB,CAAE,CACpB,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,UAAU,CACV,SAAS,CACnB,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CAEH,CAAC,CAEL,CAAC,CAED,KAAM,CAAAC,UAAU,CAAG,CACjBC,UAAU,CAAE,IAAI,CAChBC,OAAO,CAAE,CACPC,MAAM,CAAE,CACNC,QAAQ,CAAE,KAAK,CACfC,KAAK,CAAE,OAAO,CACdX,MAAM,CAAE,CACNY,QAAQ,CAAE,EAAE,CACZC,OAAO,CAAE,EACX,CACF,CAAC,CACDC,KAAK,CAAE,CACLC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,oCACR,CACF,CACF,CAAC,CAED,KAAM,CAAAC,WAAW,CAAIC,UAAU,EAAK,CAClC,KAAM,CAAAC,MAAM,CAAGpF,QAAQ,CAACa,QAAQ,CAACwE,IAAI,CAAC5C,OAAO,EAAIA,OAAO,CAACgB,UAAU,CAACD,WAAW,GAAK2B,UAAU,CAAC,CAC/F,GAAIC,MAAM,CAAE,CACV1E,iBAAiB,CAAC,CAChB8C,WAAW,CAAE4B,MAAM,CAAC3B,UAAU,CAACD,WAAW,CAC1CE,SAAS,CAAE0B,MAAM,CAAC3B,UAAU,CAACC,SAAS,CACtCE,eAAe,CAAEwB,MAAM,CAAC3B,UAAU,CAACG,eAAe,CAClDtD,SAAS,CAAE8E,MAAM,CAACjE,QAAQ,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;AACjDd,QAAQ,CAAE6E,MAAM,CAACjE,QAAQ,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC/C,CAAC,CAAC,CACJ,CAAC,IAAM,CACLnB,OAAO,CAAC2D,IAAI,CAAC,UAAUsB,UAAU,aAAa,CAAC,CACjD,CACF,CAAC,CAED,mBACEzF,KAAA,QAAK4F,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClC7F,KAAA,CAACb,GAAG,KACEuB,SAAS,CACboF,MAAM,CAAGC,GAAG,EAAKpF,YAAY,CAACoF,GAAG,CAACrF,SAAS,CAAE,CAC7CsF,QAAQ,CAAC,kCAAkC,CAC3CC,iBAAiB,CAAE/F,YAAa,CAChCgG,OAAO,CAAEzD,iBAAkB,CAAAoD,QAAA,EAG1BvF,QAAQ,EAAIA,QAAQ,CAACa,QAAQ,EAAIb,QAAQ,CAACa,QAAQ,CAACC,MAAM,CAAG,CAAC,eAC5DtB,IAAA,CAACV,MAAM,EAAC+G,EAAE,CAAC,iBAAiB,CAACzE,IAAI,CAAC,SAAS,CAACnB,IAAI,CAAE,CAAEmB,IAAI,CAAE,mBAAmB,CAAEP,QAAQ,CAAEb,QAAQ,CAACa,QAAQ,EAAI,EAAG,CAAE,CAAA0E,QAAA,cACjH/F,IAAA,CAACT,KAAK,EACJ8G,EAAE,CAAC,gBAAgB,CACnBzE,IAAI,CAAC,MAAM,CACX0E,KAAK,CAAE,CACL,YAAY,CAAE,SAAS,CACvB,cAAc,CAAE,GAAG,CACnB,oBAAoB,CAAE,SACxB,CAAE,CACFF,OAAO,CAAEzD,iBAAkB,CAC5B,CAAC,CACI,CACT,CAGA1B,cAAc,eACbjB,IAAA,CAACR,KAAK,EACJsB,SAAS,CAAEG,cAAc,CAACH,SAAU,CACpCC,QAAQ,CAAEE,cAAc,CAACF,QAAS,CAClCwF,WAAW,CAAE,IAAK,CAClBC,YAAY,CAAE,KAAM,CACpBC,OAAO,CAAEA,CAAA,GAAMvF,iBAAiB,CAAC,IAAI,CAAE,CACvCwF,MAAM,CAAC,KAAK,CAAAX,QAAA,cAEZ7F,KAAA,QAAKyG,KAAK,CAAE,CAAEC,QAAQ,CAAE,MAAM,CAAEC,UAAU,CAAE,mBAAmB,CAAEvB,OAAO,CAAE,KAAM,CAAE,CAAAS,QAAA,eAChF/F,IAAA,OAAI2G,KAAK,CAAE,CAAEG,YAAY,CAAE,KAAK,CAAEF,QAAQ,CAAE,MAAM,CAAEG,UAAU,CAAE,MAAO,CAAE,CAAAhB,QAAA,CACtE9E,cAAc,CAAC+C,WAAW,CACzB,CAAC,cACL9D,KAAA,MAAA6F,QAAA,eAAG7F,KAAA,WAAA6F,QAAA,EAAS9E,cAAc,CAACiD,SAAS,CAAC,GAAC,EAAQ,CAAC,IAAC,CAACjD,cAAc,CAACmD,eAAe,EAAI,CAAC,EACjF,CAAC,CACD,CACR,EACE,CAAC,cAENpE,IAAA,QAAK8F,SAAS,CAAC,qBAAqB,CAAAC,QAAA,cAClC/F,IAAA,CAACP,GAAG,EAACgB,IAAI,CAAE+D,OAAQ,CAACwC,OAAO,CAAEjC,UAAW,CAAE,CAAC,CACxC,CAAC,EACH,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}