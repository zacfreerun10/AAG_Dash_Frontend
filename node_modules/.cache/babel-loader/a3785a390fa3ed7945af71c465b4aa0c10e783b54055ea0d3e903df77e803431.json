{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zacfr\\\\Downloads\\\\AAG_DASH\\\\compressed\\\\frontend\\\\src\\\\components\\\\MortalityMap.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Map, { Source, Layer, Popup } from \"react-map-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport { Pie } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst MAPBOX_TOKEN = \"pk.eyJ1IjoibWV0cm9raW0yMTciLCJhIjoiY2x4dzFrazJxMmJkajJycHpnNThpYjZpZiJ9.l0lDGi84xouJXT_uq91FOQ\";\nexport default function MortalityMap({\n  boundary,\n  data\n}) {\n  _s();\n  var _topNData$;\n  console.log(\"boundary prop:\", boundary);\n  const [viewState, setViewState] = useState({\n    longitude: -95.7133,\n    latitude: 37.0902,\n    zoom: 6\n  });\n  const [selectedCounty, setSelectedCounty] = useState(null);\n  const [topN, setTopN] = useState(50); // State to manage the number of counties to display in the pie chart\n\n  useEffect(() => {\n    if (boundary && boundary.features && boundary.features.length > 0) {\n      console.log(\"🗺️ Updating Mortality Map with multiple boundaries:\", boundary);\n\n      // Extract ALL boundary coordinates for centering the map\n      const allCoords = boundary.features.flatMap(b => {\n        var _b$geometry;\n        return ((_b$geometry = b.geometry) === null || _b$geometry === void 0 ? void 0 : _b$geometry.type) === \"Polygon\" ? b.geometry.coordinates[0] : b.geometry.coordinates.flat(1) || [];\n      });\n      const lons = allCoords.map(c => c[0]);\n      const lats = allCoords.map(c => c[1]);\n      if (lons.length > 0 && lats.length > 0) {\n        const minLon = Math.min(...lons);\n        const maxLon = Math.max(...lons);\n        const minLat = Math.min(...lats);\n        const maxLat = Math.max(...lats);\n        setViewState({\n          longitude: (minLon + maxLon) / 2,\n          latitude: (minLat + maxLat) / 2,\n          zoom: 6,\n          // Adjust zoom for multiple counties\n          transitionDuration: 1000\n        });\n      }\n    }\n  }, [boundary]);\n  const handleCountyClick = event => {\n    const map = event.target;\n    const features = map.queryRenderedFeatures(event.point, {\n      layers: ['boundary-layer']\n    });\n    if (features && features.length > 0) {\n      const feature = features[0];\n      const coords = feature.geometry.coordinates.flat(2);\n      if (coords.length > 0) {\n        // Pair the coordinates\n        const pairedCoords = [];\n        for (let i = 0; i < coords.length; i += 2) {\n          pairedCoords.push([coords[i], coords[i + 1]]);\n        }\n        const validCoords = pairedCoords.filter(coord => !isNaN(coord[0]) && !isNaN(coord[1]));\n        if (validCoords.length > 0) {\n          const centroid = validCoords.reduce((acc, coord) => [acc[0] + coord[0], acc[1] + coord[1]], [0, 0]);\n          centroid[0] /= validCoords.length;\n          centroid[1] /= validCoords.length;\n          if (!isNaN(centroid[0]) && !isNaN(centroid[1])) {\n            var _feature$properties, _feature$properties2, _feature$properties3;\n            setSelectedCounty({\n              county_name: ((_feature$properties = feature.properties) === null || _feature$properties === void 0 ? void 0 : _feature$properties.county_name) || data.county_name || \"Unknown County\",\n              indicator: ((_feature$properties2 = feature.properties) === null || _feature$properties2 === void 0 ? void 0 : _feature$properties2.indicator) || data.mortalityRate || \"N/A\",\n              indicator_value: ((_feature$properties3 = feature.properties) === null || _feature$properties3 === void 0 ? void 0 : _feature$properties3.indicator_value) || \"N/A\",\n              longitude: centroid[0],\n              latitude: centroid[1]\n            });\n          } else {\n            console.warn(\"Centroid is not a valid LngLat object.\");\n          }\n        } else {\n          console.warn(\"No valid coordinates found for the feature.\");\n        }\n      } else {\n        console.warn(\"No coordinates found for the feature.\");\n      }\n    } else {\n      console.warn(\"No features found at the clicked location.\");\n    }\n  };\n\n  // Prepare data for the pie chart\n  const topNData = (boundary.features || []).slice(0, topN).map(feature => ({\n    county_name: feature.properties.county_name,\n    indicator: feature.properties.indicator,\n    indicator_value: feature.properties.indicator_value\n  }));\n  const pieData = {\n    labels: topNData.map(item => item.county_name),\n    datasets: [{\n      label: `${((_topNData$ = topNData[0]) === null || _topNData$ === void 0 ? void 0 : _topNData$.indicator) || 'Indicator'}`,\n      data: topNData.map(item => item.indicator_value),\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#808000', '#008080', '#000080', '#cc3366', '#f88379 ', '#FF5733', '#33FF57', '#5733FF', '#FF33A8', '#33A8FF', '#A833FF', '#FFD700', '#40E0D0', '#FF4500', '#6A5ACD', '#00FA9A', '#DC143C', '#8A2BE2', '#FF6347', '#4682B4', '#D2691E', '#9ACD32', '#2E8B57', '#B22222', '#32CD32'],\n      hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#808000', '#008080', '#000080', '#cc3366', '#f88379 ', '#FF5733', '#33FF57', '#5733FF', '#FF33A8', '#33A8FF', '#A833FF', '#FFD700', '#40E0D0', '#FF4500', '#6A5ACD', '#00FA9A', '#DC143C', '#8A2BE2', '#FF6347', '#4682B4', '#D2691E', '#9ACD32', '#2E8B57', '#B22222', '#32CD32']\n    }]\n  };\n  const pieOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n        align: 'start',\n        labels: {\n          boxWidth: 20,\n          padding: 10\n        }\n      },\n      title: {\n        display: true,\n        text: 'Health Data Comparison of Counties'\n      }\n    }\n  };\n  const handleQuery = countyName => {\n    const county = boundary.features.find(feature => feature.properties.county_name === countyName);\n    if (county) {\n      setSelectedCounty({\n        county_name: county.properties.county_name,\n        indicator: county.properties.indicator,\n        indicator_value: county.properties.indicator_value,\n        longitude: county.geometry.coordinates[0][0][0],\n        // Assuming the first coordinate is representative\n        latitude: county.geometry.coordinates[0][0][1]\n      });\n    } else {\n      console.warn(`County ${countyName} not found.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container-inner\",\n    children: [/*#__PURE__*/_jsxDEV(Map, {\n      ...viewState,\n      onMove: evt => setViewState(evt.viewState),\n      mapStyle: \"mapbox://styles/mapbox/light-v10\",\n      mapboxAccessToken: MAPBOX_TOKEN,\n      onClick: handleCountyClick,\n      children: [boundary && boundary.features && boundary.features.length > 0 && /*#__PURE__*/_jsxDEV(Source, {\n        id: \"county-boundary\",\n        type: \"geojson\",\n        data: {\n          type: \"FeatureCollection\",\n          features: boundary.features || []\n        },\n        children: /*#__PURE__*/_jsxDEV(Layer, {\n          id: \"boundary-layer\",\n          type: \"fill\",\n          paint: {\n            \"fill-color\": \"#ff4d4d\",\n            \"fill-opacity\": 0.4,\n            \"fill-outline-color\": \"#000000\"\n          },\n          onClick: handleCountyClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), selectedCounty && /*#__PURE__*/_jsxDEV(Popup, {\n        longitude: selectedCounty.longitude,\n        latitude: selectedCounty.latitude,\n        closeButton: true,\n        closeOnClick: false,\n        onClose: () => setSelectedCounty(null),\n        anchor: \"top\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: \"14px\",\n            fontFamily: \"Arial, sans-serif\",\n            padding: \"5px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginBottom: \"5px\",\n              fontSize: \"16px\",\n              fontWeight: \"bold\"\n            },\n            children: selectedCounty.county_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [selectedCounty.indicator, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 18\n            }, this), \" \", selectedCounty.indicator_value]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pie-chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: pieData,\n        options: pieOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(MortalityMap, \"u4RbzqrAeuDkLrIc6Y3LWC2AfZY=\");\n_c = MortalityMap;\nvar _c;\n$RefreshReg$(_c, \"MortalityMap\");","map":{"version":3,"names":["useEffect","useState","Map","Source","Layer","Popup","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","MAPBOX_TOKEN","MortalityMap","boundary","data","_s","_topNData$","console","log","viewState","setViewState","longitude","latitude","zoom","selectedCounty","setSelectedCounty","topN","setTopN","features","length","allCoords","flatMap","b","_b$geometry","geometry","type","coordinates","flat","lons","map","c","lats","minLon","Math","min","maxLon","max","minLat","maxLat","transitionDuration","handleCountyClick","event","target","queryRenderedFeatures","point","layers","feature","coords","pairedCoords","i","push","validCoords","filter","coord","isNaN","centroid","reduce","acc","_feature$properties","_feature$properties2","_feature$properties3","county_name","properties","indicator","mortalityRate","indicator_value","warn","topNData","slice","pieData","labels","item","datasets","label","backgroundColor","hoverBackgroundColor","pieOptions","responsive","plugins","legend","position","align","boxWidth","padding","title","display","text","handleQuery","countyName","county","find","className","children","onMove","evt","mapStyle","mapboxAccessToken","onClick","id","paint","fileName","_jsxFileName","lineNumber","columnNumber","closeButton","closeOnClick","onClose","anchor","style","fontSize","fontFamily","marginBottom","fontWeight","options","_c","$RefreshReg$"],"sources":["C:/Users/zacfr/Downloads/AAG_DASH/compressed/frontend/src/components/MortalityMap.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Map, { Source, Layer, Popup } from \"react-map-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst MAPBOX_TOKEN = \"pk.eyJ1IjoibWV0cm9raW0yMTciLCJhIjoiY2x4dzFrazJxMmJkajJycHpnNThpYjZpZiJ9.l0lDGi84xouJXT_uq91FOQ\";\r\n\r\nexport default function MortalityMap({ boundary, data }) {\r\n  console.log(\"boundary prop:\", boundary);\r\n\r\n  const [viewState, setViewState] = useState({\r\n    longitude: -95.7133,\r\n    latitude: 37.0902,\r\n    zoom: 6\r\n  });\r\n\r\n  const [selectedCounty, setSelectedCounty] = useState(null);\r\n  const [topN, setTopN] = useState(50); // State to manage the number of counties to display in the pie chart\r\n\r\n  useEffect(() => {\r\n    if (boundary && boundary.features && boundary.features.length > 0) {\r\n      console.log(\"🗺️ Updating Mortality Map with multiple boundaries:\", boundary);\r\n\r\n      // Extract ALL boundary coordinates for centering the map\r\n      const allCoords = boundary.features.flatMap(b =>\r\n        b.geometry?.type === \"Polygon\"\r\n          ? b.geometry.coordinates[0]\r\n          : b.geometry.coordinates.flat(1) || []\r\n      );\r\n\r\n      const lons = allCoords.map(c => c[0]);\r\n      const lats = allCoords.map(c => c[1]);\r\n\r\n      if (lons.length > 0 && lats.length > 0) {\r\n        const minLon = Math.min(...lons);\r\n        const maxLon = Math.max(...lons);\r\n        const minLat = Math.min(...lats);\r\n        const maxLat = Math.max(...lats);\r\n\r\n        setViewState({\r\n          longitude: (minLon + maxLon) / 2,\r\n          latitude: (minLat + maxLat) / 2,\r\n          zoom: 6, // Adjust zoom for multiple counties\r\n          transitionDuration: 1000\r\n        });\r\n      }\r\n    }\r\n  }, [boundary]);\r\n\r\n  const handleCountyClick = (event) => {\r\n    const map = event.target;\r\n    const features = map.queryRenderedFeatures(event.point, {\r\n      layers: ['boundary-layer']\r\n    });\r\n  \r\n    if (features && features.length > 0) {\r\n      const feature = features[0];\r\n      const coords = feature.geometry.coordinates.flat(2);\r\n  \r\n      if (coords.length > 0) {\r\n        // Pair the coordinates\r\n        const pairedCoords = [];\r\n        for (let i = 0; i < coords.length; i += 2) {\r\n          pairedCoords.push([coords[i], coords[i + 1]]);\r\n        }\r\n  \r\n        const validCoords = pairedCoords.filter(coord => !isNaN(coord[0]) && !isNaN(coord[1]));\r\n  \r\n        if (validCoords.length > 0) {\r\n          const centroid = validCoords.reduce((acc, coord) => [acc[0] + coord[0], acc[1] + coord[1]], [0, 0]);\r\n          centroid[0] /= validCoords.length;\r\n          centroid[1] /= validCoords.length;\r\n  \r\n          if (!isNaN(centroid[0]) && !isNaN(centroid[1])) {\r\n            setSelectedCounty({\r\n              county_name: feature.properties?.county_name || data.county_name || \"Unknown County\",\r\n              indicator: feature.properties?.indicator || data.mortalityRate|| \"N/A\",\r\n              indicator_value:feature.properties?.indicator_value || \"N/A\",\r\n              longitude: centroid[0],\r\n              latitude: centroid[1],\r\n            });\r\n          } else {\r\n            console.warn(\"Centroid is not a valid LngLat object.\");\r\n          }\r\n        } else {\r\n          console.warn(\"No valid coordinates found for the feature.\");\r\n        }\r\n      } else {\r\n        console.warn(\"No coordinates found for the feature.\");\r\n      }\r\n    } else {\r\n      console.warn(\"No features found at the clicked location.\");\r\n    }\r\n  };\r\n\r\n  // Prepare data for the pie chart\r\n  const topNData = (boundary.features || []).slice(0, topN).map(feature => ({\r\n    county_name: feature.properties.county_name,\r\n    indicator: feature.properties.indicator,\r\n    indicator_value: feature.properties.indicator_value\r\n  }));\r\n\r\n  const pieData = {\r\n    labels: topNData.map(item => item.county_name),\r\n    datasets: [\r\n      {\r\n        label: `${topNData[0]?.indicator || 'Indicator'}`,\r\n        data: topNData.map(item => item.indicator_value),\r\n        backgroundColor: [\r\n          '#FF6384',\r\n          '#36A2EB',\r\n          '#FFCE56',\r\n          '#4BC0C0',\r\n          '#9966FF',\r\n          '#808000',\r\n          '#008080',\r\n          '#000080',\r\n          '#cc3366',\r\n          '#f88379 ',\r\n          '#FF5733',\r\n          '#33FF57',\r\n          '#5733FF',\r\n          '#FF33A8',\r\n          '#33A8FF',\r\n          '#A833FF',\r\n          '#FFD700',\r\n          '#40E0D0',\r\n'#FF4500',\r\n'#6A5ACD',\r\n'#00FA9A',\r\n'#DC143C',\r\n'#8A2BE2',\r\n'#FF6347',\r\n'#4682B4',\r\n'#D2691E',\r\n'#9ACD32',\r\n'#2E8B57',\r\n'#B22222',\r\n'#32CD32',\r\n        ],\r\n        hoverBackgroundColor: [\r\n          '#FF6384',\r\n          '#36A2EB',\r\n          '#FFCE56',\r\n          '#4BC0C0',\r\n          '#9966FF',\r\n          '#808000',\r\n          '#008080',\r\n          '#000080',\r\n          '#cc3366',\r\n          '#f88379 ',\r\n          '#FF5733',\r\n'#33FF57',\r\n'#5733FF',\r\n'#FF33A8',\r\n'#33A8FF',\r\n'#A833FF',\r\n'#FFD700',\r\n'#40E0D0',\r\n'#FF4500',\r\n'#6A5ACD',\r\n'#00FA9A',\r\n'#DC143C',\r\n'#8A2BE2',\r\n'#FF6347',\r\n'#4682B4',\r\n'#D2691E',\r\n'#9ACD32',\r\n'#2E8B57',\r\n'#B22222',\r\n'#32CD32',\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n\r\n  const pieOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        align: 'start',\r\n        labels: {\r\n          boxWidth: 20,\r\n          padding: 10,\r\n        },\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Health Data Comparison of Counties',\r\n      },\r\n    },\r\n  };\r\n\r\n  const handleQuery = (countyName) => {\r\n    const county = boundary.features.find(feature => feature.properties.county_name === countyName);\r\n    if (county) {\r\n      setSelectedCounty({\r\n        county_name: county.properties.county_name,\r\n        indicator: county.properties.indicator,\r\n        indicator_value: county.properties.indicator_value,\r\n        longitude: county.geometry.coordinates[0][0][0], // Assuming the first coordinate is representative\r\n        latitude: county.geometry.coordinates[0][0][1],\r\n      });\r\n    } else {\r\n      console.warn(`County ${countyName} not found.`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"map-container-inner\">\r\n      <Map\r\n        {...viewState}\r\n        onMove={(evt) => setViewState(evt.viewState)}\r\n        mapStyle=\"mapbox://styles/mapbox/light-v10\"\r\n        mapboxAccessToken={MAPBOX_TOKEN}\r\n        onClick={handleCountyClick}\r\n      >\r\n        {/* Render county boundary */}\r\n        {boundary && boundary.features && boundary.features.length > 0 && (\r\n          <Source id=\"county-boundary\" type=\"geojson\" data={{ type: \"FeatureCollection\", features: boundary.features || [] }}>\r\n            <Layer\r\n              id=\"boundary-layer\"\r\n              type=\"fill\"\r\n              paint={{\r\n                \"fill-color\": \"#ff4d4d\",\r\n                \"fill-opacity\": 0.4,\r\n                \"fill-outline-color\": \"#000000\"\r\n              }}\r\n              onClick={handleCountyClick}\r\n            />\r\n          </Source>\r\n        )}\r\n\r\n        {/* Show Popup when a county is clicked */}\r\n        {selectedCounty && (\r\n          <Popup\r\n            longitude={selectedCounty.longitude}\r\n            latitude={selectedCounty.latitude}\r\n            closeButton={true}\r\n            closeOnClick={false}\r\n            onClose={() => setSelectedCounty(null)}\r\n            anchor=\"top\"\r\n          >\r\n            <div style={{ fontSize: \"14px\", fontFamily: \"Arial, sans-serif\", padding: \"5px\" }}>\r\n              <h3 style={{ marginBottom: \"5px\", fontSize: \"16px\", fontWeight: \"bold\" }}>\r\n                {selectedCounty.county_name}\r\n              </h3>\r\n              <p><strong>{selectedCounty.indicator}:</strong> {selectedCounty.indicator_value}</p>\r\n            </div>\r\n          </Popup>\r\n        )}\r\n      </Map>\r\n      {/* Render Pie Chart */}\r\n      <div className=\"pie-chart-container\">\r\n        <Pie data={pieData} options={pieOptions} />\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}